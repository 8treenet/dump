//Package po generated by 'freedom new-po'
package po

import (
	"github.com/jinzhu/gorm"
)

// Albums .
type Albums struct {
	changes  map[string]interface{}
	AlbumID  int    `gorm:"primary_key;column:AlbumId"`
	Title    string `gorm:"column:Title"`
	ArtistID int    `gorm:"column:ArtistId"`
}

// TableName .
func (obj *Albums) TableName() string {
	return "albums"
}

// TakeChanges .
func (obj *Albums) TakeChanges() map[string]interface{} {
	if obj.changes == nil {
		return nil
	}
	result := make(map[string]interface{})
	for k, v := range obj.changes {
		result[k] = v
	}
	obj.changes = nil
	return result
}

// updateChanges .
func (obj *Albums) setChanges(name string, value interface{}) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.changes[name] = value
}

// SetTitle .
func (obj *Albums) SetTitle(title string) {
	obj.Title = title
	obj.setChanges("Title", title)
}

// SetArtistID .
func (obj *Albums) SetArtistID(artistID int) {
	obj.ArtistID = artistID
	obj.setChanges("ArtistId", artistID)
}

// AddArtistID .
func (obj *Albums) AddArtistID(artistID int) {
	obj.ArtistID += artistID
	obj.setChanges("ArtistId", gorm.Expr("ArtistId + ?", artistID))
}
