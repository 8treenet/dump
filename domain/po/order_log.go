//Package po generated by 'freedom new-po'
package po

import (
	"github.com/jinzhu/gorm"
)

// OrderLog .
type OrderLog struct {
	changes map[string]interface{}
	ID      int    `gorm:"primary_key;column:id"`
	OrderID int    `gorm:"column:order_id"`
	Desc    string `gorm:"column:desc"`
}

// TableName .
func (obj *OrderLog) TableName() string {
	return "order_log"
}

// TakeChanges .
func (obj *OrderLog) TakeChanges() map[string]interface{} {
	if obj.changes == nil {
		return nil
	}
	result := make(map[string]interface{})
	for k, v := range obj.changes {
		result[k] = v
	}
	obj.changes = nil
	return result
}

// updateChanges .
func (obj *OrderLog) setChanges(name string, value interface{}) {
	if obj.changes == nil {
		obj.changes = make(map[string]interface{})
	}
	obj.changes[name] = value
}

// SetOrderID .
func (obj *OrderLog) SetOrderID(orderID int) {
	obj.OrderID = orderID
	obj.setChanges("order_id", orderID)
}

// SetDesc .
func (obj *OrderLog) SetDesc(desc string) {
	obj.Desc = desc
	obj.setChanges("desc", desc)
}

// AddOrderID .
func (obj *OrderLog) AddOrderID(orderID int) {
	obj.OrderID += orderID
	obj.setChanges("order_id", gorm.Expr("order_id + ?", orderID))
}
